{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Documents/google-grader-www/src/Pages/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api/axiosInstance/graderAPI\";\nimport VisualizationContainer from \"../Components/VisualizationComponent\";\n\nconst Dashboard = () => {\n  const [locations, setLocations] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState({});\n  const [allLocationData, setAllLocationData] = useState({});\n\n  const getData = async () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const googleID = localStorage.getItem(\"googleID\");\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    const data = await api.get(`/api/v1/account/accountId/105342314371442959648`, options);\n\n    if (data.data.locationData !== undefined && data.data.locationData.length) {\n      //   data.data.locationData.map((el) => {\n      //     setLocations(el.locationName);\n      //   });\n      setLocations(data.data.locationData);\n      console.log(data.data.locationData);\n    }\n  };\n\n  const getAllLocationData = async () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    const presenceData = await api.get(`/api/v1/grader/presence/accountId/${currentLocation.name}`, options);\n    const reputationData = await api.get(`/api/v1/grader/reputation/accountId/${currentLocation.name}`, options);\n    const activityData = await api.get(`/api/v1/grader/activity/accountId/${currentLocation.name}`, options);\n    setAllLocationData({\n      presence: presenceData.data,\n      reputation: reputationData.data,\n      activity: activityData.data\n    });\n  };\n\n  const dataHandler = el => {\n    setCurrentLocation(el);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    if (currentLocation.locationName !== undefined) {\n      getAllLocationData();\n    }\n  }, [currentLocation]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, locations.length && locations.map(el => /*#__PURE__*/React.createElement(\"p\", {\n    value: el,\n    onClick: () => dataHandler(el),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, el.locationName)), currentLocation.locationName !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), allLocationData.presence !== undefined && /*#__PURE__*/React.createElement(VisualizationContainer, {\n    allLocationData: allLocationData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/tamara/Documents/google-grader-www/src/Pages/Dashboard.js"],"names":["React","useState","useEffect","api","VisualizationContainer","Dashboard","locations","setLocations","currentLocation","setCurrentLocation","allLocationData","setAllLocationData","getData","accessToken","localStorage","getItem","googleID","options","headers","Authorization","data","get","locationData","undefined","length","console","log","getAllLocationData","presenceData","name","reputationData","activityData","presence","reputation","activity","dataHandler","el","locationName","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport api from \"../api/axiosInstance/graderAPI\";\n\nimport VisualizationContainer from \"../Components/VisualizationComponent\";\n\nconst Dashboard = () => {\n  const [locations, setLocations] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState({});\n  const [allLocationData, setAllLocationData] = useState({});\n  const getData = async () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const googleID = localStorage.getItem(\"googleID\");\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n    const data = await api.get(\n      `/api/v1/account/accountId/105342314371442959648`,\n      options\n    );\n    if (data.data.locationData !== undefined && data.data.locationData.length) {\n      //   data.data.locationData.map((el) => {\n      //     setLocations(el.locationName);\n      //   });\n      setLocations(data.data.locationData);\n      console.log(data.data.locationData);\n    }\n  };\n\n  const getAllLocationData = async () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n    const presenceData = await api.get(\n      `/api/v1/grader/presence/accountId/${currentLocation.name}`,\n      options\n    );\n\n    const reputationData = await api.get(\n      `/api/v1/grader/reputation/accountId/${currentLocation.name}`,\n      options\n    );\n\n    const activityData = await api.get(\n      `/api/v1/grader/activity/accountId/${currentLocation.name}`,\n      options\n    );\n\n    setAllLocationData({\n      presence: presenceData.data,\n      reputation: reputationData.data,\n      activity: activityData.data,\n    });\n  };\n\n  const dataHandler = (el) => {\n    setCurrentLocation(el);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (currentLocation.locationName !== undefined) {\n      getAllLocationData();\n    }\n  }, [currentLocation]);\n\n  return (\n    <div>\n      {locations.length &&\n        locations.map((el) => (\n          <p value={el} onClick={() => dataHandler(el)}>\n            {el.locationName}\n          </p>\n        ))}\n\n      {currentLocation.locationName !== undefined && (\n        <div>\n          {/* <p>{currentLocation.locationName}</p>\n          <p>{currentLocation.address.locality}</p> */}\n        </div>\n      )}\n\n      {allLocationData.presence !== undefined && (\n        <VisualizationContainer allLocationData={allLocationData} />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}